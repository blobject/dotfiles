colorscheme cemant

set-option global grepcmd 'rg --line-number --with-filename'
set-option global indentwidth 2
set-option global modelinefmt '{StatusLineInfo}%sh{test "${#kak_bufname}" ">" $(expr $(tput cols) "/" 2) && printf "${kak_bufname}" | sed "s_[^/]\+\$__" | sed "s_\([^/]\{,2\}\)[^/]*/_\1/_g" || printf "${kak_bufname}" | sed "s_[^/]\+\$__"}{black,white}%sh{printf "${kak_bufname##*/}"}{StatusLineInfo} %val{buf_line_count}/{black}%val{cursor_line}{StatusLineInfo}:{black}%val{cursor_char_column}{{context_info}} {{mode_info}}'
set-option global tabstop 2
set-option global ui_options terminal_assistant=none terminal_enable_mouse=yes terminal_set_title=yes terminal_status_on_top=yes

add-highlighter global/ number-lines -hlcursor -separator ' '
add-highlighter global/ regex \h+$ 0:Error
add-highlighter global/ regex '(FIX|FIXME|NOTE|TODO|WIP|XXX)' 0:black,bright-blue+F
add-highlighter global/ show-matching
add-highlighter global/ wrap

define-command -buffer-completion d 'delete-buffer' -docstring 'delete current buffer'
define-command 0wrap 'add-highlighter global/ wrap' -docstring 'wrap lines'
define-command 0nowrap 'remove-highlighter global/wrap' -docstring 'do not wrap lines'

hook global BufCreate .* %{ evaluate-commands %sh{
  # recognise filetypes that snuck past detection/file.kak
  if test -z "${kak_opt_filetype}"; then
    case $(file -b --mime-type -L "${kak_buffile}") in
      text/x-tcl) printf "set-option buffer filetype sh\n" ;; # no tcl atm
    esac
  fi
} }
hook global BufCreate .*\.conf %{
  set-option buffer filetype conf
}
hook global BufCreate .*\.tcl %{
  set-option buffer filetype sh
}
hook global BufWritePost .* %{
  # backup files on write
  evaluate-commands %sh{
    case "${kak_buffile#$HOME/}" in
      *~| \
      *[._]log|*[._]log.old| \
      *[._]hist|*[._]history| \
      .gnupg/*| \
      .ssh/*| \
      p/*) exit;;
    esac
    size="$(du -Lk ${kak_buffile})"; set -- $size; size=$1
    test 2048 -lt $size && exit
    bakd="${HOME}/bak/kak"
    test -d "${bakd}" && test -w "${bakd}" \
    || (printf "info %%{cannot write to backup directory\n${bakd}}" && exit)
    bakf="${bakd}/"$(basename ${kak_bufname})"~" # basename needed for links
    /usr/bin/diff >/dev/null 2>&1 -q "${kak_buffile}" "${bakf}" && exit
    /usr/bin/cp >/dev/null -fL "${kak_buffile}" "${bakf}"
  }
}

map global normal <C> ''
map global normal <a-space> ''
map global insert <c-v> ''
map global normal <tab>   'C'          -docstring 'copy selection on next line'
map global normal <s-tab> <a-,>        -docstring 'remove primary selection'
map global normal <minus> 'vk'         -docstring 'scroll up one'
map global normal <=>     'vj'         -docstring 'scroll down one'
map global normal <_>     '8vk'        -docstring 'scroll up eight'
map global normal <+>     '8vj'        -docstring 'scroll down eight'
map global normal <'>     '_'          -docstring 'trim'
map global normal </>     '/(?i)'      -docstring 'uncased search'
map global normal <a-/>   <a-/>'(?i)'  -docstring 'uncased reverse search'
map global normal <?>     '?(?i)'      -docstring 'uncased extended search'
map global normal <a-?>   <a-?>'(?i)'  -docstring 'uncased extended reverse search'
map global normal <space> 'h/(?i)<ret>' -docstring 'empty out search register'
map global normal <X>     'Jx'         -docstring 'extend to next line'
map global normal <s-d>   'Glxd'       -docstring 'delete extended line'
map global normal <c-g>   ','          -docstring 'remove secondary selections'
map global normal <n>     'nvc'        -docstring 'select next search pattern and center view'
map global normal <s-n>   'Nvc'        -docstring 'extend with next search pattern and center view'
map global normal <a-n>   <a-n>'vc'    -docstring 'select previous search pattern and center view'
map global normal <a-s-n> <a-s-n>'vc'  -docstring 'extend with previous search pattern and center view'
map global normal <c-p> '!wl-paste<space>--no-newline<ret>:echo -markup "{Information}pasted from clipboard"<ret>' -docstring 'paste clipboard'
map global normal <a-v>   <c-b>        -docstring 'scroll up page'
map global normal <c-v>   <c-f>        -docstring 'scroll down page'
map global normal <c-y> '<a-|>wl-copy<ret>:echo -markup "{Information}yanked to clipboard"<ret>' -docstring 'yank selection into clipboard'
map global insert <a-d> <esc>'Glxd'    -docstring 'delete extended line'
map global insert <c-g> <esc><space>   -docstring 'remove secondary selections'
map global insert <a-g> <esc><a-space> -docstring 'remove primary selection'
map global insert <c-p> '<esc>!wl-paste<space>--no-newline<ret>:echo -markup "{Information}pasted from clipboard"<ret>' -docstring 'paste clipboard'
map global insert <c-q> <c-v>          -docstring 'raw insert'
map global insert <a-v> <esc><c-b>     -docstring 'scroll up page'
map global insert <c-v> <esc><c-f>     -docstring 'scroll down page'

# rainbow.kak
set-option global rainbow_colors black magenta blue bright-blue cyan green yellow bright-black
hook global WinSetOption filetype=.+ %{
  rainbow-enable-window
}

