VOID

- create installation usb of void live
- make sure everything ready for wipe (install win to usb, back up any purchase addons, etc.)

- backup previous
  - bak, src, gnupg, ssh, fonts, gitconfig
  - ref, got, browser tabs, browser addons, accounting
  - any projects tucked away in their respective folders
  - any unsynced, orphaned, in-progress tasks

- boot into live usb
  - connect to internet
    - wpa_passphrase SSID PASSWORD >> /etc/wpa_supplicant/wpa_supplicant-FOONETIF.conf
    - wpa_supplicant -B -iwlo1 -c/etc/wpa_supplicant/wpa_supplicant-FOONETIF.conf

- create filesystem layout
  - crypt, lvm
    - fill entire disk with uniform nonsense (cryptsetup luksFormat ...) (see linux partition below)
    - fill luks header with random (dd ... urandom ...)
    - create gpt filesystem with 1G first efi partition
    - create linux partition with rest
    - cryptsetup on linux partition
      - cryptsetup luksFormat --hash=sha512 --key-size=512 --cipher=aes-xts-plain64 --verify-passphrase /dev/nvme0n1p2
      - cryptsetup luksOpen /dev/nvme0n1p2 FOOGROUP
    - create logical volume
      - vgcreate FOOGROUP /dev/mapper/FOOGROUP
      - lvcreate --name root -l 100%FREE void
    - format partitions
      - mkfs.xfs -L root /dev/FOOGROUP/root
      - mkfs.vfat -n efi /dev/nvme0n1p1
    - mount partitions
      - mount /dev/FOOGROUP/root /mnt
      - mount /dev/nvme0n1p1 /mnt/boot/efi

- install system
  - copy rsa keys
    - cp /var/db/xbps/keys/* /mnt/var/db/xbps/keys/
  - install packages
    - xbps-install -Sy -R https://repo-default.voidlinux.org/current -r /mnt base-system cryptsetup lvm2 refind xtools
  - chroot
    - xchroot /mnt
  - luks key
    - generate random key (dd bs=1 count=64 if=

- configure initial system
  - root
    - chown root:root /
    - chmod 755 /
    - passwd root
  - hostname
    - echo c > /etc/hostname
  - locale (glibc only)
    - echo 'LANG=en_US.UTF-8' > /etc/locale.conf
    - echo 'en_US.UTF-8 UTF-8' >> /etc/default/libc-locales
    - xbps-reconfigure -f glibc-locales
  - filesystem
    - /etc/fstab
  - bootloader
    - refind-install
    - edit /boot/refind-linux.conf

- reboot

- initialise system
  - (temp) connect to internet again
    - wpa_passphrase SSID PASSWORD > /etc/wpa_supplicant/wpa_supplicant-FOONETIF.conf
    - wpa_supplicant -B -iwlo1 -c/etc/wpa_supplicant/wpa_supplicant-FOONETIF.conf
    - ln -s /etc/sv/{wpa_supplicant,dhcpcd} /var/service
  - update xbps
    - void-repo-multilib, void-repo-multilib-nonfree, void-repo-nonfree
    - xbps-install -Su
  - add first user
    - useradd -m -g users -G wheel,tape,floppy,lp,dialout,audio,video,cdrom,optical,scanner,kvm,xbuilder FOOUSER
    - passwd b
    - visudo (or add wheel config to sudoers.d)

- configure level 0 (base)
  - install level 0
    - bash-completion, chrony, intel-ucode, iwd, socklog-void
    - fd, git, lz4, lzop, ripgrep, rlwrap, rsync, stow, tcl, tmux, unzip, xz, zip, zstd
  - enable services
    - iwd (disable wpa_supplicant), dbus, dhcpcd, lvmetad, nanoklogd, ntpd, socklog-unix, uuidd
  - connect to wifi (iwctl)
  - copy over gnupg, ssh
  - dotfiles
    - (temp) copy over .gitconfig
    - really clone dotfiles
  - dotfiles-related
    - get hsnt, change keycode 58 (caps) to Control
    - link hsnt
    - get cemant
    - link etc/rc.*
  - configure refind
    - /boot/refind_linux.conf, /boot/EFI/refind/refind.conf
  - make swap file
    - dd if=/dev/zero of=/swap bs=1M count=24k
    - chmod 0600 /swap
    - mkswap -L swap -U clear /swap
    - swapon & /etc/fstab

- install level 1
  - install (power, bt, gfx base): acpi clamav encfs gnupg tlp powertop nvtop blueman mesa mesa-dri mesa-vaapi mesa-vulkan-intel intel-video-accel vulkan-loader amdvlk Vulkan-Tools libva-utils sof-firmware seatd xorg-minimal xorg-server-xwayland foot setxkbmap xrdb xset xterm openbox tuigreet
  - remove .bash_logout
  - link __shell, greetd
  - (temp) copy .bashrc, .bash_profile, .profile
  - add FOOUSER to groups: socklog,_clamav,_seatd
  - enable services
    - greetd seatd
    - disable agetty-tty[4-6]
  - install (headless convenience): kak-lsp kakoune vim jmtpfs lftp ntfs-3g xdg-utils lshw wev xprop xlsclients
  - copy over ref, bak, src, got, fonts
  - install (fonts): inconsolata, sarasa, freefont, opensans
  - install hyprland:
    - xbps.d/.conf: repository=https://raw.githubusercontent.com/Makrennel/hyprland-void/repository-x86_64-glibc
    - hyprland, hyprland-devel, xdg-desktop-portal-hyprland, hypridle, hyprlock


- reboot

- configure level 2 (dev)
  - install level 2
    - base-devel clang llvm elixir ghc go guile mono msbuild-bin n octave openjdk21 python3-pip R rustup sbcl squeak swi-prolog tcllib tk postgresql postgresql-client sqlite nginx
    - cmake, extra-cmake-modules, docker[-compose], gdb, hyperfine, jq, perf, shellcheck, tree, valgrind
  - compile kernel
    - install: {elfutils,ncurses,openssl,xfsprogs}-devel
    - compile: make CC=clang HOSTCC=clang -j8
    - initrd: 0s dracut VER
    - bootloader: /boot/*/refind*
    - make sure modules: bt*, i915, ipvs, iwlwifi, rfcomm, snd_*
  - rust
    - rustup-init

- configure level 2 (more)
  - hw: hwinfo, gammastep-indicator, kanshi, light, xf86-input-mtrack, xrandr
  - proc: psmisc, snooze
  - wm: breeze-snow-cursor-theme, fnott, grim, iwgtk, libappindicator,
        qt5-wayland, papirus-icon-theme, polybar, slurp, swappy, swaybg,
        swayidle, tofi, waybar, wl-clipboard
        xeyes
  - media: ffmpeg, helvum, imv, mpv, pavucontrol, pipewire, ponymix,
           wf-recorder, alsa-pipewire, gstreamer1-pipewire, libspa-bluetooth,
           libspa-ffmpeg, libspa-vulkan
  - misc: blender, firefox, foliate, fontforge, fontmatrix, gnucash, gnuplot,
          ImageMagick, inkscape, krita, libreoffice, pdf.js, qemu, screenkey,
          texlive-most, tigervnc, ttfautohint, visidata, python3-openpyxl,
          zathura-{djvu,pdf-mupdf,ps}
  - net: net-tools wget
  - manual: chrome
  - firefox config
    - search engines: mycroft project: g, ddg, w, d, t, u, e, k, l, m, y
    - extensions: react, simple tab groups, translate web pages, ublock origin, video downloadhelper
    - about:config
      + gfx.x11-egl.force-enabled, gfx.webrender.all, gfx.webrender.compositor, gfx.webrender.compositor.force-enabled, media.ffmpeg.vaapi.enabled, toolkit.legacyUserProfileCustomizations.stylesheets
      - media.ffvpx.enabled, media.peerconnection.enabled, media.rdd-ffvpx.enabled, media.rdd-vpx.enabled, toolkit.telemetry.server
      = browser.uidensity
    - log into all web services and configure as necessary
  - stow all
  - make sure all configs, services, hotkeys work

- reboot

- for work
  - install: k9s, kubectl, postgresql-client, postgresql-libs-devel, python3-devel, sqlmap, sslscan
  - manual: aws-cli, miniconda, pycharm, BurpSuite
  - pip: poetry, python-lsp-server
  - n: N_PREFIX=$HOME/.n, PATH=...:$HOME/.n, n latest
  - npm: typescript-language-server, vscode-{css,html,json}-languageserver-bin
  - chrome:
    - download deb from site
    - copy:
      - bin to /usr/bin
      - share to /usr/local/share
      - opt to /opt
      - fix share/applications/google-chrome.desktop
  - chrome (old):
    - git clone git://github.com/void-linux/void-packages.git
    - cd void-packages
    - ./xbps-src binary-bootstrap
    - etc/conf: XBPS_ALLOW_RESTRICTED=yes
    - ./xbps-src pkg google-chrome
    - sudo xbps-install google-chrome --repository=hostdir/binpkgs/nonfree

- for fun
  - manual: critcl
  - install: dependencies of wlroots-devel

- games
  - cataclysm-dda
  - steam
    - xdg-user-dirs
    - 32bit: amdvlk, libglapi, libllvm19, libsensors, libXxf86vm, mesa, mesa-dri, mesa-libgallium, mesa-vulkan-intel, xorg-server-xwayland

========================================================================
HERE ENDS THINKPAD SETUP. next are older notes
========================================================================

*** steps

- level 0 ::
- link: dhcpcd, iwd, rc.conf, resolv.conf, sudoers.d, tlp
- *fs:* root xfs, 512m vfat efi, swap as file, refind, remove grub
- *sec:* ~chmod root:root~ on =sudoers.d/* before linking
  - be wary of syntax and permissions
- *net:* dhcpcd, iwd
  - void installer already set up wpa_supplicant stuff, so reuse it: ~wpa_supplicant -i $dev -c /etc/wpa_supplicant/wpa_supplicant-$dev.conf~
  - alternatively, use iwd right away
- *repo:* void-repo-{multilib,nonfree}{-nonfree,}
- *kbd:* =/usr/share/{kbd/keymaps/i386,X11/xkb/symbols}/*=
- *util:* bash-completion, chrony, socklog-void, tlp

- level 1 ::
- link: modprobe, sddm, =/usr/share/sddm/scripts/Xsetup=, sysctl, xorg
- *shell:*
  - ~touch /etc/sv/agetty-tty[3-6]/down~, remove service
  - /cmdline:/ fd, git, mercurial, ripgrep, tmux, tcl
  - /util:/ lz4, rlwrap, stow, xz, zip
  - (stow:) stow will link the maximally existent path, so any addition to an over-inclusive dir link will begin to reside in the stowed (ie. this) repository -- hence the mkdirs in =stow.tcl= to make sure only the desired subtrees (usually leaves and singletons) become links
- *hw:*
  - /blob:/ various firmware, intel-ucode
  - /driver:/ intel-video-accel, mesa-dri, mesa-vulkan-intel, xf86-input-mtrack
  - /util:/ acpi, acpid
- *sess:*
  - /service:/ sddm, seatd, xorg-minimal, xorg-server-xwayland
  - /util:/ foot, setxkbmap, xrdb, xset, xterm
  - /wm:/ cwm, labwc
  - (sddm,labwc:) to start sessions without logind or pam's help, create =/run/user/$UID= using =/etc/rc.local=, then set =$XDG_RUNTIME_DIR= to it in =~/.profile= (=~/.bashrc=, =~/.bash_profile=, =~/.profile= logic can be confusing)
- *edit:*
  - emacs, kak-lsp, kakoune, python-lsp, vim
- *util:*
  - /fs:/ jmtpfs, lftp, ntfs-3g, rsync
  - /look:/ gammastep-indicator, kanshi, light, xrandr
  - /monitor:/ blueman-tray, fnott, iwgtk, libappindicator, polybar, psmisc, snooze, waybar
    - (bluez:) for bluetooth battery status, enable =Experimental= in =/etc/bluetooth/main.conf=
  - /shell:/ waylock, tofi, wl-clipboard, xdg-utils
- *media:*
  - /audio:/ pipewire, wireplumber
    - ~ln -s /usr/share/alsa/alsa.conf.d/*-pipewire*.conf /etc/alsa/conf.d/~
  - /video:/ ffmpeg, mpv
  - /lib:/ alsa-pipewire, gstreamer1-pipewire, libspa-bluetooth, libspa-ffmpeg, libspa-v4l2, libspa-vulkan, xdg-desktop-portal-wlr
  - /util:/ alsa-tools, ponymix, pavucontrol

- level 2 ::
- *shell:*
  - /hw:/ lshw, wev
  - /sess:/ qt5-wayland, lswt, xeyes, xprop
  - /pkg:/ xtools
- *dev:*
  - /lang:/ base-devel, ccls, clang, llvm, chez, elixir, ghc, go, guile, mono, n, octave, openjdk, pip, r, rustup, sbcl, squeak, swi-prolog, tcllib, texlab, tk, zig, zls
  - /db:/ postgresql{,-client}, sqlite
  - /util:/ broot, catch2, cmake, docker, gdb, msbuild, perf, rpm, tree, valgrind
- *app:*
  - /life:/ gnucash
  - /doc:/ foliate, gnuplot, libreoffice, pdf.js, texlive-most, zathura{djvu,pdf-mupdf,ps)
  - /media:/ blender, gimp, glxinfo, imagemagick, imv, inkscape, grim, screenkey, slurp, swappy, wf-recorder
  - /look:/ breeze-snow-cursor-theme, hsetroot, papirus-icon-theme, qt5ct, swaybg
  - /net:/ firefox
    - to customise look, edit =profile.../chrome/userChrome.css=; =about:config=: enable =toolkit.legacyUserProfileCustomizations.stylesheets=
    - =about:config=: set =browser.uidensity= to =1=
  - /sec:/ encfs, gnupg
  - /fun:/ cataclysm-dda, fontforge, fontmatrix, qemu, ttfautohint
- *kernel:*
  - {elfutils,xfsprogs,openssl,ncurses}-devel

- notes ::
- local
  - place executable-onlies in =~/bin/=, and more involved applications in =~/.local/bin/= or =/usr/local/= with edited =/etc/ld.so.conf.d/=
- group
  - users, wheel, floppy, lp, audio, video, cdrom, optical, kvm, xbuilder, docker, bluetooth, _seatd, socklog
- daemon
  - acpid, agetty-tty*, bluetoothd, containerd, dbus, dhcpcd, docker, iwd, nanoklogd, ntpd, sddm, seatd, socklog-unix, tlp, udevd, uuidd
    - silence weird acpi events in =/etc/acpi/handler.sh=: =ac_adapter ACPI0003:00=, =battery PNP0C0A:00=, =processor LNXCPU:*=, =ABBC0F5C*=, =button/volumedown VOLDN=, =button/volumeup VOLUP=
- kernel
  - modularise (for boot + init)
    - dm-crypt, raid, audio, bluetooth (usb, bnep, rfcomm, etc.), ASIX usb ethernet, builtin wifi
- node, npm
  - typescript-language-server, vscode-{css,html,json}-languageserver-bin
- win dualboot
  - timezone: configure win to be UTC
  - battery threshold: configure thresholds via matebook applet on win
  - bluetooth profiles: either mess with link keys on both systems, or clear/repair every time ([[https://unix.stackexchange.com/questions/568521/simpler-method-of-pairing-bluetooth-devices-for-both-windows-linux][link1]])

----
WIN

windows install
- make sure microsoft account recognises windows license
- download windows 11 iso
- use something like WinToUSB to install iso onto external ssd
- boot into bios settings
  - disable secure boot, presence detection, wan
  - swap fn<->ctrl
- boot into usb win (enter -> f12 on boot)
- create new local account, delete first (ms) account
- windows update
- install lenovo vantage, then update
- install hsnt
- install powertoys
- check antivirus
- windows setting
  - disable most stuff like detection, tracking, ai
  - mouse sensitivity
- control panel
  - disable sleep button (disables fn-4 sleep)
- regedit
  - disable fn-tab magnify
- powertoys
  - change caps->ctrl
- all the little personalisations
